<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jujin Kim&#39;s blog</title>
    <link>https://jujinkim.com/post/</link>
    <description>Recent content in Posts on Jujin Kim&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Jujin Kim (Dangumju)</copyright>
    <lastBuildDate>Mon, 26 Oct 2020 00:50:14 +0900</lastBuildDate><atom:link href="https://jujinkim.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Difference between Framework and Library</title>
      <link>https://jujinkim.com/post/2020/difference-framework-library/</link>
      <pubDate>Mon, 26 Oct 2020 00:50:14 +0900</pubDate>
      
      <guid>https://jujinkim.com/post/2020/difference-framework-library/</guid>
      <description>Framework  Framework is a tool that wraps up whole project codes. When you create some statues, you may make a skeleton(framework) first and build the rest upon the skeleton. Projects are also not different, writing codes to fit the framework. It&amp;rsquo;s like writing codes into the framework.
 Framework decides the architecture or style, development plan of the project. Developers are programming within the framework. Some project codes invoke methods of the framework, but, usually, projects are developed using methods that are provided by interfaces from the framework.</description>
    </item>
    
    <item>
      <title>What is DI(Dependency Injection)?</title>
      <link>https://jujinkim.com/post/2020/what-is-di/</link>
      <pubDate>Sun, 18 Oct 2020 01:12:39 +0900</pubDate>
      
      <guid>https://jujinkim.com/post/2020/what-is-di/</guid>
      <description>This post is for those(especially me) who don&amp;rsquo;t really know what DI (Dependency Injection) is before studying Dagger2.
What is DI?  DI stands for Dependency Injection, and is a programming design technique that injects the dependency of an object from the outside. Yes, maybe you don&amp;rsquo;t understand like me. I don&amp;rsquo;t understand what to inject, why to use it. So I wrote this post.
 Before difining the DI features, le&amp;rsquo;ts imagine a tiny situation in our daily life.</description>
    </item>
    
    <item>
      <title>Use Utterances comment at Hugo</title>
      <link>https://jujinkim.com/post/2020/use-utterances-comment-hugo/</link>
      <pubDate>Tue, 13 Oct 2020 22:45:58 +0900</pubDate>
      
      <guid>https://jujinkim.com/post/2020/use-utterances-comment-hugo/</guid>
      <description>Usually, some blog platforms such as WordPress and Blogger support their own comment system. However, since the comment system needs a server and DB, it is not able to be applied directly to a static web page. So we need a comment service that using an external server and script.
There are a bunch of comment systems, We&amp;rsquo;re gonna take a look the service that named utterances in this post.</description>
    </item>
    
    <item>
      <title>Renewal</title>
      <link>https://jujinkim.com/post/2020/renewal/</link>
      <pubDate>Tue, 06 Oct 2020 02:17:45 +0900</pubDate>
      
      <guid>https://jujinkim.com/post/2020/renewal/</guid>
      <description>Hello, This is Jujin Kim&amp;rsquo;s dev&amp;amp;tech engineering blog. Thanks for visiting.
Currently this site is under the renewal update.
If you come to see my profile page, please click HERE.
Thank you.</description>
    </item>
    
  </channel>
</rss>
